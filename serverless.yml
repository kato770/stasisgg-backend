service:
  name: stasisgg-backend

package:
  individually: false
  excludeDevDependencies: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-layers

custom:
  serverless-layers:
    packageManager: yarn
  bucket: 'stasisgg-backend-lambda-layers'

provider:
  name: aws
  runtime: nodejs10.x
  region: ap-northeast-1
  environment:
    RIOT_LOL_API_KEY: ${env:RIOT_LOL_API_KEY}
  deploymentBucket:
    name: ${self:custom.bucket}
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - "s3:PutObject"
        - "s3:GetObject"
      Resource: 
        - "arn:aws:s3:::${self:custom.bucket}/"
    - Effect: Allow
      Action:
        - "lambda:PublishLayerVersion"
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - "cloudformation:DescribeStacks"
      Resource:
        - "*"

functions:
  get-last-10-matches:
    handler: src/get-last-10-matches/getLast10Matches.getLast10Matches
    events:
      - http:
          method: get
          path: get-last-10-matches
          cors: true
  get-one-match-card:
    handler: src/get-one-match-card/getOneMatchCard.getOneMatchCard
    events:
      - http:
          method: get
          path: get-one-match-card
          cors: true
  get-player-profile:
    handler: src/get-player-profile/getPlayerProfile.getPlayerProfile
    events:
      - http:
          method: get
          path: get-player-profile
          cors: true
  get-matches:
    handler: src/get-matches/getMatches.getMatches
    events:
      - http:
          method: get
          path: get-matches
          cors: true

resources:
  Resources:
    S3BucketOutputs:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}